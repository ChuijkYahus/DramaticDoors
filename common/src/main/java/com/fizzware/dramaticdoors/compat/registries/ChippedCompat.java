package com.fizzware.dramaticdoors.compat.registries;

import com.fizzware.dramaticdoors.compat.DDCompatAdvancement;
import com.fizzware.dramaticdoors.compat.DDCompatRecipe;
import com.fizzware.dramaticdoors.registry.DDNames;
import com.fizzware.dramaticdoors.registry.DDRegistry;

import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.level.block.state.properties.BlockSetType;

public class ChippedCompat
{
	public static void registerCompat() {
		registerBlocksItems();
		registerRecipes();
	}
	
	private static void registerBlocksItems() {
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_HEAVY, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_DUAL_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "dual_paneled_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_PRESSED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "pressed_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_SHACK, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "shack_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_SLIDING, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "sliding_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_SCREEN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "screen_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_GATED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "gated_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_GLASS, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "glass_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "windowed_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_TILED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tiled_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_TILE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tile_windowed_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_FORTIFIED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "fortified_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_SECRET, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "secret_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_BOARDED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "boarded_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_PAPER, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paper_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_BEACH, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "beach_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_BARRED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paneled_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_SUPPORTED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "supported_oak_door")), BlockSetType.OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_OAK_OVERGROWN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "overgrown_oak_door")), BlockSetType.OAK, false);

		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_HEAVY, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_DUAL_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "dual_paneled_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_PRESSED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "pressed_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_SHACK, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "shack_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_SLIDING, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "sliding_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_SCREEN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "screen_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_GATED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "gated_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_GLASS, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "glass_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "windowed_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_TILED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tiled_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_TILE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tile_windowed_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_FORTIFIED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "fortified_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_SECRET, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "secret_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_MODERN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "classic_windowed_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_PAPER, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paper_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_BEACH, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "beach_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_BARRED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paneled_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_SUPPORTED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "supported_spruce_door")), BlockSetType.SPRUCE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_SPRUCE_OVERGROWN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "overgrown_spruce_door")), BlockSetType.SPRUCE, false);

		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_HEAVY, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_DUAL_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "dual_paneled_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_PRESSED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "pressed_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_SHACK, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "shack_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_SLIDING, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "sliding_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_SCREEN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "screen_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_GATED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "gated_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_GLASS, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "glass_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "windowed_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_TILED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tiled_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_TILE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tile_windowed_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_FORTIFIED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "fortified_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_SECRET, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "secret_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_MODERN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "classic_windowed_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_BOARDED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "boarded_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_BEACH, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "beach_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_BARRED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paneled_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_SUPPORTED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "supported_birch_door")), BlockSetType.BIRCH, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_BIRCH_OVERGROWN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "overgrown_birch_door")), BlockSetType.BIRCH, false);

		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_HEAVY, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_DUAL_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "dual_paneled_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_PRESSED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "pressed_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_SHACK, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "shack_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_SLIDING, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "sliding_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_SCREEN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "screen_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_GATED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "gated_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_GLASS, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "glass_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "windowed_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_TILED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tiled_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_TILE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tile_windowed_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_FORTIFIED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "fortified_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_SECRET, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "secret_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_MODERN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "classic_windowed_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_BOARDED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "boarded_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_PAPER, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paper_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_BARRED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paneled_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_SUPPORTED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "supported_jungle_door")), BlockSetType.JUNGLE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_JUNGLE_OVERGROWN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "overgrown_jungle_door")), BlockSetType.JUNGLE, false);

		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_HEAVY, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_DUAL_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "dual_paneled_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_PRESSED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "pressed_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_SHACK, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "shack_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_SLIDING, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "sliding_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_SCREEN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "screen_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_GATED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "gated_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_GLASS, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "glass_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "windowed_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_TILED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tiled_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_TILE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tile_windowed_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_FORTIFIED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "fortified_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_SECRET, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "secret_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_MODERN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "classic_windowed_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_BOARDED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "boarded_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_PAPER, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paper_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_BEACH, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "beach_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paneled_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_SUPPORTED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "supported_acacia_door")), BlockSetType.ACACIA, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_ACACIA_OVERGROWN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "overgrown_acacia_door")), BlockSetType.ACACIA, false);

		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_HEAVY, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_DUAL_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "dual_paneled_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_PRESSED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "pressed_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_SHACK, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "shack_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_SLIDING, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "sliding_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_SCREEN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "screen_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_GATED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "gated_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_GLASS, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "glass_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "windowed_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_TILED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tiled_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_TILE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tile_windowed_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_FORTIFIED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "fortified_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_SECRET, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "secret_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_MODERN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "classic_windowed_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_BOARDED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "boarded_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_PAPER, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paper_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_BEACH, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "beach_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_BARRED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_SUPPORTED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "supported_dark_oak_door")), BlockSetType.DARK_OAK, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_DARK_OAK_OVERGROWN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "overgrown_dark_oak_door")), BlockSetType.DARK_OAK, false);

		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_HEAVY, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_DUAL_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "dual_paneled_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_PRESSED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "pressed_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_SHACK, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "shack_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_SLIDING, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "sliding_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_SCREEN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "screen_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_GATED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "gated_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_GLASS, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "glass_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "windowed_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_TILED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tiled_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_TILE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tile_windowed_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_FORTIFIED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "fortified_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_SECRET, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "secret_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_MODERN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "classic_windowed_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_BOARDED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "boarded_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_PAPER, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paper_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_BEACH, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "beach_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_BARRED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paneled_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_SUPPORTED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "supported_mangrove_door")), BlockSetType.MANGROVE, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_MANGROVE_OVERGROWN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "overgrown_mangrove_door")), BlockSetType.MANGROVE, false);

		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_HEAVY, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_DUAL_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "dual_paneled_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_PRESSED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "pressed_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_SHACK, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "shack_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_SLIDING, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "sliding_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_SCREEN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "screen_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_GATED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "gated_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_GLASS, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "glass_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "windowed_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_TILED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tiled_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_TILE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tile_windowed_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_FORTIFIED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "fortified_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_SECRET, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "secret_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_MODERN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "classic_windowed_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_BOARDED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "boarded_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_PAPER, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paper_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_BEACH, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "beach_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_BARRED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paneled_crimson_door")), BlockSetType.CRIMSON, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_CRIMSON_OVERGROWN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "overgrown_crimson_door")), BlockSetType.CRIMSON, false);

		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_HEAVY, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_DUAL_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "dual_paneled_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_PRESSED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "pressed_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_SHACK, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "shack_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_SLIDING, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "sliding_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_SCREEN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "screen_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_GATED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "gated_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_GLASS, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "glass_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "windowed_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_TILED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tiled_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_TILE_WINDOWED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "tile_windowed_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_FORTIFIED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "fortified_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_SECRET, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "secret_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_MODERN, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "classic_windowed_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_BOARDED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "boarded_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_PAPER, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paper_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_BEACH, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "beach_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_BARRED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "barred_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_PANELED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "paneled_warped_door")), BlockSetType.WARPED, false);
		DDRegistry.registerDoorBlockAndItem(DDNames.TALL_CHIPPED_WARPED_SUPPORTED, null, DDRegistry.getBlockFromResourceLocation(new ResourceLocation("chipped", "supported_warped_door")), BlockSetType.WARPED, false);
	}
	
	private static void registerRecipes() {
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_HEAVY, new ResourceLocation("chipped", "heavy_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_PRESSED, new ResourceLocation("chipped", "pressed_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_SHACK, new ResourceLocation("chipped", "shack_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_FORTIFIED, new ResourceLocation("chipped", "fortified_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_SLIDING, new ResourceLocation("chipped", "sliding_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_SCREEN, new ResourceLocation("chipped", "screen_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_GATED, new ResourceLocation("chipped", "gated_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_GLASS, new ResourceLocation("chipped", "glass_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_WINDOWED, new ResourceLocation("chipped", "windowed_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_TILED, new ResourceLocation("chipped", "tiled_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_SECRET, new ResourceLocation("chipped", "secret_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_BOARDED, new ResourceLocation("chipped", "boarded_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_PAPER, new ResourceLocation("chipped", "paper_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_BEACH, new ResourceLocation("chipped", "beach_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_BARRED, new ResourceLocation("chipped", "barred_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_PANELED, new ResourceLocation("chipped", "paneled_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_SUPPORTED, new ResourceLocation("chipped", "supported_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_OAK_OVERGROWN, new ResourceLocation("chipped", "overgrown_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_HEAVY, new ResourceLocation("chipped", "heavy_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_PRESSED, new ResourceLocation("chipped", "pressed_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_SHACK, new ResourceLocation("chipped", "shack_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_FORTIFIED, new ResourceLocation("chipped", "fortified_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_SLIDING, new ResourceLocation("chipped", "sliding_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_SCREEN, new ResourceLocation("chipped", "screen_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_GATED, new ResourceLocation("chipped", "gated_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_GLASS, new ResourceLocation("chipped", "glass_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_WINDOWED, new ResourceLocation("chipped", "windowed_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_TILED, new ResourceLocation("chipped", "tiled_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_SECRET, new ResourceLocation("chipped", "secret_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_MODERN, new ResourceLocation("chipped", "classic_windowed_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_PAPER, new ResourceLocation("chipped", "paper_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_BEACH, new ResourceLocation("chipped", "beach_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_BARRED, new ResourceLocation("chipped", "barred_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_PANELED, new ResourceLocation("chipped", "paneled_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_SUPPORTED, new ResourceLocation("chipped", "supported_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_SPRUCE_OVERGROWN, new ResourceLocation("chipped", "overgrown_spruce_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_HEAVY, new ResourceLocation("chipped", "heavy_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_PRESSED, new ResourceLocation("chipped", "pressed_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_SHACK, new ResourceLocation("chipped", "shack_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_FORTIFIED, new ResourceLocation("chipped", "fortified_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_SLIDING, new ResourceLocation("chipped", "sliding_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_SCREEN, new ResourceLocation("chipped", "screen_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_GATED, new ResourceLocation("chipped", "gated_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_GLASS, new ResourceLocation("chipped", "glass_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_WINDOWED, new ResourceLocation("chipped", "windowed_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_TILED, new ResourceLocation("chipped", "tiled_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_SECRET, new ResourceLocation("chipped", "secret_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_MODERN, new ResourceLocation("chipped", "classic_windowed_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_BOARDED, new ResourceLocation("chipped", "boarded_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_BEACH, new ResourceLocation("chipped", "beach_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_BARRED, new ResourceLocation("chipped", "barred_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_PANELED, new ResourceLocation("chipped", "paneled_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_SUPPORTED, new ResourceLocation("chipped", "supported_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_BIRCH_OVERGROWN, new ResourceLocation("chipped", "overgrown_birch_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_HEAVY, new ResourceLocation("chipped", "heavy_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_PRESSED, new ResourceLocation("chipped", "pressed_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_SHACK, new ResourceLocation("chipped", "shack_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_FORTIFIED, new ResourceLocation("chipped", "fortified_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_SLIDING, new ResourceLocation("chipped", "sliding_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_SCREEN, new ResourceLocation("chipped", "screen_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_GATED, new ResourceLocation("chipped", "gated_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_GLASS, new ResourceLocation("chipped", "glass_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_WINDOWED, new ResourceLocation("chipped", "windowed_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_TILED, new ResourceLocation("chipped", "tiled_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_SECRET, new ResourceLocation("chipped", "secret_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_MODERN, new ResourceLocation("chipped", "classic_windowed_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_BOARDED, new ResourceLocation("chipped", "boarded_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_PAPER, new ResourceLocation("chipped", "paper_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_BARRED, new ResourceLocation("chipped", "barred_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_PANELED, new ResourceLocation("chipped", "paneled_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_SUPPORTED, new ResourceLocation("chipped", "supported_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_JUNGLE_OVERGROWN, new ResourceLocation("chipped", "overgrown_jungle_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_HEAVY, new ResourceLocation("chipped", "heavy_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_PRESSED, new ResourceLocation("chipped", "pressed_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_SHACK, new ResourceLocation("chipped", "shack_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_FORTIFIED, new ResourceLocation("chipped", "fortified_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_SLIDING, new ResourceLocation("chipped", "sliding_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_SCREEN, new ResourceLocation("chipped", "screen_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_GATED, new ResourceLocation("chipped", "gated_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_GLASS, new ResourceLocation("chipped", "glass_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_WINDOWED, new ResourceLocation("chipped", "windowed_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_TILED, new ResourceLocation("chipped", "tiled_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_SECRET, new ResourceLocation("chipped", "secret_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_MODERN, new ResourceLocation("chipped", "classic_windowed_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_BOARDED, new ResourceLocation("chipped", "boarded_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_PAPER, new ResourceLocation("chipped", "paper_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_BEACH, new ResourceLocation("chipped", "beach_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_PANELED, new ResourceLocation("chipped", "paneled_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_SUPPORTED, new ResourceLocation("chipped", "supported_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_ACACIA_OVERGROWN, new ResourceLocation("chipped", "overgrown_acacia_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_HEAVY, new ResourceLocation("chipped", "heavy_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_PRESSED, new ResourceLocation("chipped", "pressed_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_SHACK, new ResourceLocation("chipped", "shack_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_FORTIFIED, new ResourceLocation("chipped", "fortified_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_SLIDING, new ResourceLocation("chipped", "sliding_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_SCREEN, new ResourceLocation("chipped", "screen_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_GATED, new ResourceLocation("chipped", "gated_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_GLASS, new ResourceLocation("chipped", "glass_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_WINDOWED, new ResourceLocation("chipped", "windowed_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_TILED, new ResourceLocation("chipped", "tiled_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_SECRET, new ResourceLocation("chipped", "secret_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_MODERN, new ResourceLocation("chipped", "classic_windowed_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_BOARDED, new ResourceLocation("chipped", "boarded_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_PAPER, new ResourceLocation("chipped", "paper_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_BEACH, new ResourceLocation("chipped", "beach_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_BARRED, new ResourceLocation("chipped", "barred_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_SUPPORTED, new ResourceLocation("chipped", "supported_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_DARK_OAK_OVERGROWN, new ResourceLocation("chipped", "overgrown_dark_oak_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_HEAVY, new ResourceLocation("chipped", "heavy_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_PRESSED, new ResourceLocation("chipped", "pressed_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_SHACK, new ResourceLocation("chipped", "shack_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_FORTIFIED, new ResourceLocation("chipped", "fortified_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_SLIDING, new ResourceLocation("chipped", "sliding_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_SCREEN, new ResourceLocation("chipped", "screen_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_GATED, new ResourceLocation("chipped", "gated_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_GLASS, new ResourceLocation("chipped", "glass_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_WINDOWED, new ResourceLocation("chipped", "windowed_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_TILED, new ResourceLocation("chipped", "tiled_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_SECRET, new ResourceLocation("chipped", "secret_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_MODERN, new ResourceLocation("chipped", "classic_windowed_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_BOARDED, new ResourceLocation("chipped", "boarded_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_PAPER, new ResourceLocation("chipped", "paper_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_BEACH, new ResourceLocation("chipped", "beach_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_BARRED, new ResourceLocation("chipped", "barred_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_PANELED, new ResourceLocation("chipped", "paneled_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_SUPPORTED, new ResourceLocation("chipped", "supported_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_MANGROVE_OVERGROWN, new ResourceLocation("chipped", "overgrown_mangrove_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_HEAVY, new ResourceLocation("chipped", "heavy_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_PRESSED, new ResourceLocation("chipped", "pressed_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_SHACK, new ResourceLocation("chipped", "shack_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_FORTIFIED, new ResourceLocation("chipped", "fortified_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_SLIDING, new ResourceLocation("chipped", "sliding_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_SCREEN, new ResourceLocation("chipped", "screen_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_GATED, new ResourceLocation("chipped", "gated_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_GLASS, new ResourceLocation("chipped", "glass_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_WINDOWED, new ResourceLocation("chipped", "windowed_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_TILED, new ResourceLocation("chipped", "tiled_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_SECRET, new ResourceLocation("chipped", "secret_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_MODERN, new ResourceLocation("chipped", "classic_windowed_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_BOARDED, new ResourceLocation("chipped", "boarded_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_PAPER, new ResourceLocation("chipped", "paper_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_BEACH, new ResourceLocation("chipped", "beach_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_BARRED, new ResourceLocation("chipped", "barred_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_PANELED, new ResourceLocation("chipped", "paneled_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_CRIMSON_OVERGROWN, new ResourceLocation("chipped", "overgrown_crimson_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_HEAVY, new ResourceLocation("chipped", "heavy_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_PRESSED, new ResourceLocation("chipped", "pressed_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_SHACK, new ResourceLocation("chipped", "shack_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_FORTIFIED, new ResourceLocation("chipped", "fortified_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_SLIDING, new ResourceLocation("chipped", "sliding_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_SCREEN, new ResourceLocation("chipped", "screen_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_GATED, new ResourceLocation("chipped", "gated_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_GLASS, new ResourceLocation("chipped", "glass_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_WINDOWED, new ResourceLocation("chipped", "windowed_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_TILED, new ResourceLocation("chipped", "tiled_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_SECRET, new ResourceLocation("chipped", "secret_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_MODERN, new ResourceLocation("chipped", "classic_windowed_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_BOARDED, new ResourceLocation("chipped", "boarded_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_PAPER, new ResourceLocation("chipped", "paper_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_BEACH, new ResourceLocation("chipped", "beach_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_BARRED, new ResourceLocation("chipped", "barred_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_PANELED, new ResourceLocation("chipped", "paneled_warped_door"));
		DDCompatAdvancement.createRecipeAdvancement(DDNames.TALL_CHIPPED_WARPED_SUPPORTED, new ResourceLocation("chipped", "supported_warped_door"));
		
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_HEAVY, new ResourceLocation("chipped", "heavy_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_PRESSED, new ResourceLocation("chipped", "pressed_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_SHACK, new ResourceLocation("chipped", "shack_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_FORTIFIED, new ResourceLocation("chipped", "fortified_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_SLIDING, new ResourceLocation("chipped", "sliding_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_SCREEN, new ResourceLocation("chipped", "screen_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_GATED, new ResourceLocation("chipped", "gated_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_GLASS, new ResourceLocation("chipped", "glass_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_WINDOWED, new ResourceLocation("chipped", "windowed_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_TILED, new ResourceLocation("chipped", "tiled_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_SECRET, new ResourceLocation("chipped", "secret_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_BOARDED, new ResourceLocation("chipped", "boarded_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_PAPER, new ResourceLocation("chipped", "paper_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_BEACH, new ResourceLocation("chipped", "beach_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_BARRED, new ResourceLocation("chipped", "barred_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_PANELED, new ResourceLocation("chipped", "paneled_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_SUPPORTED, new ResourceLocation("chipped", "supported_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_OAK_OVERGROWN, new ResourceLocation("chipped", "overgrown_oak_door"), "tall_chipped_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_HEAVY, new ResourceLocation("chipped", "heavy_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_PRESSED, new ResourceLocation("chipped", "pressed_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_SHACK, new ResourceLocation("chipped", "shack_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_FORTIFIED, new ResourceLocation("chipped", "fortified_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_SLIDING, new ResourceLocation("chipped", "sliding_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_SCREEN, new ResourceLocation("chipped", "screen_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_GATED, new ResourceLocation("chipped", "gated_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_GLASS, new ResourceLocation("chipped", "glass_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_WINDOWED, new ResourceLocation("chipped", "windowed_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_TILED, new ResourceLocation("chipped", "tiled_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_SECRET, new ResourceLocation("chipped", "secret_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_MODERN, new ResourceLocation("chipped", "classic_windowed_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_PAPER, new ResourceLocation("chipped", "paper_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_BEACH, new ResourceLocation("chipped", "beach_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_BARRED, new ResourceLocation("chipped", "barred_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_PANELED, new ResourceLocation("chipped", "paneled_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_SUPPORTED, new ResourceLocation("chipped", "supported_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_SPRUCE_OVERGROWN, new ResourceLocation("chipped", "overgrown_spruce_door"), "tall_chipped_spruce_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_HEAVY, new ResourceLocation("chipped", "heavy_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_PRESSED, new ResourceLocation("chipped", "pressed_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_SHACK, new ResourceLocation("chipped", "shack_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_FORTIFIED, new ResourceLocation("chipped", "fortified_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_SLIDING, new ResourceLocation("chipped", "sliding_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_SCREEN, new ResourceLocation("chipped", "screen_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_GATED, new ResourceLocation("chipped", "gated_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_GLASS, new ResourceLocation("chipped", "glass_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_WINDOWED, new ResourceLocation("chipped", "windowed_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_TILED, new ResourceLocation("chipped", "tiled_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_SECRET, new ResourceLocation("chipped", "secret_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_MODERN, new ResourceLocation("chipped", "classic_windowed_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_BOARDED, new ResourceLocation("chipped", "boarded_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_BEACH, new ResourceLocation("chipped", "beach_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_BARRED, new ResourceLocation("chipped", "barred_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_PANELED, new ResourceLocation("chipped", "paneled_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_SUPPORTED, new ResourceLocation("chipped", "supported_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_BIRCH_OVERGROWN, new ResourceLocation("chipped", "overgrown_birch_door"), "tall_chipped_birch_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_HEAVY, new ResourceLocation("chipped", "heavy_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_PRESSED, new ResourceLocation("chipped", "pressed_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_SHACK, new ResourceLocation("chipped", "shack_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_FORTIFIED, new ResourceLocation("chipped", "fortified_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_SLIDING, new ResourceLocation("chipped", "sliding_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_SCREEN, new ResourceLocation("chipped", "screen_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_GATED, new ResourceLocation("chipped", "gated_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_GLASS, new ResourceLocation("chipped", "glass_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_WINDOWED, new ResourceLocation("chipped", "windowed_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_TILED, new ResourceLocation("chipped", "tiled_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_SECRET, new ResourceLocation("chipped", "secret_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_MODERN, new ResourceLocation("chipped", "classic_windowed_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_BOARDED, new ResourceLocation("chipped", "boarded_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_PAPER, new ResourceLocation("chipped", "paper_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_BARRED, new ResourceLocation("chipped", "barred_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_PANELED, new ResourceLocation("chipped", "paneled_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_SUPPORTED, new ResourceLocation("chipped", "supported_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_JUNGLE_OVERGROWN, new ResourceLocation("chipped", "overgrown_jungle_door"), "tall_chipped_jungle_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_HEAVY, new ResourceLocation("chipped", "heavy_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_PRESSED, new ResourceLocation("chipped", "pressed_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_SHACK, new ResourceLocation("chipped", "shack_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_FORTIFIED, new ResourceLocation("chipped", "fortified_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_SLIDING, new ResourceLocation("chipped", "sliding_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_SCREEN, new ResourceLocation("chipped", "screen_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_GATED, new ResourceLocation("chipped", "gated_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_GLASS, new ResourceLocation("chipped", "glass_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_WINDOWED, new ResourceLocation("chipped", "windowed_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_TILED, new ResourceLocation("chipped", "tiled_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_SECRET, new ResourceLocation("chipped", "secret_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_MODERN, new ResourceLocation("chipped", "classic_windowed_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_BOARDED, new ResourceLocation("chipped", "boarded_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_PAPER, new ResourceLocation("chipped", "paper_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_BEACH, new ResourceLocation("chipped", "beach_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_PANELED, new ResourceLocation("chipped", "paneled_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_SUPPORTED, new ResourceLocation("chipped", "supported_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_ACACIA_OVERGROWN, new ResourceLocation("chipped", "overgrown_acacia_door"), "tall_chipped_acacia_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_HEAVY, new ResourceLocation("chipped", "heavy_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_PRESSED, new ResourceLocation("chipped", "pressed_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_SHACK, new ResourceLocation("chipped", "shack_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_FORTIFIED, new ResourceLocation("chipped", "fortified_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_SLIDING, new ResourceLocation("chipped", "sliding_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_SCREEN, new ResourceLocation("chipped", "screen_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_GATED, new ResourceLocation("chipped", "gated_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_GLASS, new ResourceLocation("chipped", "glass_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_WINDOWED, new ResourceLocation("chipped", "windowed_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_TILED, new ResourceLocation("chipped", "tiled_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_SECRET, new ResourceLocation("chipped", "secret_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_MODERN, new ResourceLocation("chipped", "classic_windowed_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_BOARDED, new ResourceLocation("chipped", "boarded_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_PAPER, new ResourceLocation("chipped", "paper_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_BEACH, new ResourceLocation("chipped", "beach_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_BARRED, new ResourceLocation("chipped", "barred_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_SUPPORTED, new ResourceLocation("chipped", "supported_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_DARK_OAK_OVERGROWN, new ResourceLocation("chipped", "overgrown_dark_oak_door"), "tall_chipped_dark_oak_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_HEAVY, new ResourceLocation("chipped", "heavy_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_PRESSED, new ResourceLocation("chipped", "pressed_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_SHACK, new ResourceLocation("chipped", "shack_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_FORTIFIED, new ResourceLocation("chipped", "fortified_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_SLIDING, new ResourceLocation("chipped", "sliding_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_SCREEN, new ResourceLocation("chipped", "screen_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_GATED, new ResourceLocation("chipped", "gated_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_GLASS, new ResourceLocation("chipped", "glass_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_WINDOWED, new ResourceLocation("chipped", "windowed_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_TILED, new ResourceLocation("chipped", "tiled_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_SECRET, new ResourceLocation("chipped", "secret_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_MODERN, new ResourceLocation("chipped", "classic_windowed_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_BOARDED, new ResourceLocation("chipped", "boarded_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_PAPER, new ResourceLocation("chipped", "paper_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_BEACH, new ResourceLocation("chipped", "beach_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_BARRED, new ResourceLocation("chipped", "barred_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_PANELED, new ResourceLocation("chipped", "paneled_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_SUPPORTED, new ResourceLocation("chipped", "supported_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_MANGROVE_OVERGROWN, new ResourceLocation("chipped", "overgrown_mangrove_door"), "tall_chipped_mangrove_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_HEAVY, new ResourceLocation("chipped", "heavy_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_PRESSED, new ResourceLocation("chipped", "pressed_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_SHACK, new ResourceLocation("chipped", "shack_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_FORTIFIED, new ResourceLocation("chipped", "fortified_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_SLIDING, new ResourceLocation("chipped", "sliding_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_SCREEN, new ResourceLocation("chipped", "screen_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_GATED, new ResourceLocation("chipped", "gated_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_GLASS, new ResourceLocation("chipped", "glass_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_WINDOWED, new ResourceLocation("chipped", "windowed_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_TILED, new ResourceLocation("chipped", "tiled_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_SECRET, new ResourceLocation("chipped", "secret_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_MODERN, new ResourceLocation("chipped", "classic_windowed_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_BOARDED, new ResourceLocation("chipped", "boarded_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_PAPER, new ResourceLocation("chipped", "paper_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_BEACH, new ResourceLocation("chipped", "beach_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_BARRED, new ResourceLocation("chipped", "barred_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_PANELED, new ResourceLocation("chipped", "paneled_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_CRIMSON_OVERGROWN, new ResourceLocation("chipped", "overgrown_crimson_door"), "tall_chipped_crimson_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_HEAVY, new ResourceLocation("chipped", "heavy_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_DUAL_PANELED, new ResourceLocation("chipped", "dual_paneled_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_PRESSED, new ResourceLocation("chipped", "pressed_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_SHACK, new ResourceLocation("chipped", "shack_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_FORTIFIED, new ResourceLocation("chipped", "fortified_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_SLIDING, new ResourceLocation("chipped", "sliding_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_SCREEN, new ResourceLocation("chipped", "screen_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_GATED, new ResourceLocation("chipped", "gated_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_GLASS, new ResourceLocation("chipped", "glass_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_WINDOWED, new ResourceLocation("chipped", "windowed_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_TILED, new ResourceLocation("chipped", "tiled_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_TILE_WINDOWED, new ResourceLocation("chipped", "tile_windowed_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_SECRET, new ResourceLocation("chipped", "secret_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_MODERN, new ResourceLocation("chipped", "classic_windowed_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_BOARDED, new ResourceLocation("chipped", "boarded_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_PAPER, new ResourceLocation("chipped", "paper_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_BEACH, new ResourceLocation("chipped", "beach_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_BARRED, new ResourceLocation("chipped", "barred_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_PANELED, new ResourceLocation("chipped", "paneled_warped_door"), "tall_chipped_warped_door");
		DDCompatRecipe.createTallDoorRecipe(DDNames.TALL_CHIPPED_WARPED_SUPPORTED, new ResourceLocation("chipped", "supported_warped_door"), "tall_chipped_warped_door");
	}
}
